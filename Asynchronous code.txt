Asynchronous code is executed after a task that runs in the "background finishes"
it is non-blocking
execution doesn't wait for an asynchronous task to finish its work
Callback functions alone do Not make code synchronous
EventListener alone do Not make code asynchronous

const p = document.querySelector('.p');
setTimeout(function(){
 p.textContent='My name is Shreya!';
}, 5000);
p.style.color='red';


const img = document.querySelector('.dog');
img.src='dog.jpg';
img.addEventListener('load', function(){
img.classList.add('fadeIn');
});
p.style.width='300px';

Examples: Geoloactaion API and AJAX calls

Asynchronous JS and XML: Allows us to communicatewith remote web series in an asynchronous way. With AJAX calls, we can request data from web servers dynamically.

with AJAX we can make a http request to the server, which has the data. The server then sent backs a response containing that data we requested.
And this back and forth between client and server all happens asynchronously in the background and there can be different types of request.